@{
    List<Tuple<string, string>> pages = Context
        .Documents[Blog.Pages]
        .Where(x => x.Bool(BlogKeys.ShowInNavbar, true))
        .Where(x => x.FilePath(Keys.RelativeFilePath)?.FullPath?.StartsWith("index") == (bool?)false)
        .Select(x => Tuple.Create(x.WithoutSettings.String(Keys.Title), Context.GetLink(x)))
        .Where(x => !string.IsNullOrEmpty(x.Item1))
        .OrderBy(x => x.Item1)
        .ToList();

    if(Documents[Blog.BlogPosts].Any() && Context.Bool(BlogKeys.GenerateArchive))
    {
        pages.Add(Tuple.Create("Blog", Context.GetLink(Context.String(BlogKeys.PostsPath) + "/index.html")));
    }

    if(Documents[Blog.Tags].Any() && Context.Bool(Context.Settings.Get<string>("AddTagsToNav"))) // Hide tags link in nav for now
    {
        pages.Add(Tuple.Create("Tags", Context.GetLink("tags/index.html")));
    }
    
    foreach(Tuple<string, string> page in pages)
    {
        <li class="nav-item"><a class="nav-link" href="@(page.Item2)">@(page.Item1)</a></li>
    }
}